// -*- C++ -*-
// File generated by PyFoam - sorry for the ugliness

FoamFile
{
 version 2.0;
 format ascii;
 class dictionary;
 object controlDict;
}

libs
  (
    "libOpenFOAM.so"
    "libsimpleSwakFunctionObjects.so"
    "libswakFunctionObjects.so"
    "libgroovyBC.so"
  );

application myFluidFoam;

startFrom latestTime;

startTime 0;

stopAt endTime;

endTime 3000;

deltaT 1;

writeControl timeStep;

writeInterval 100;

purgeWrite 0;

writeFormat ascii;

writePrecision 6;

writeCompression no;
timeFormat general;

timePrecision 6;

runTimeModifiable yes;
functions
{
    enth0.000234375
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.000234375;
	    surface {
		    type	plane;
		    basePoint	(0.000234375 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.000703125
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.000703125;
	    surface {
		    type	plane;
		    basePoint	(0.000703125 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.001171875
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.001171875;
	    surface {
		    type	plane;
		    basePoint	(0.001171875 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.001640625
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.001640625;
	    surface {
		    type	plane;
		    basePoint	(0.001640625 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.002109375
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.002109375;
	    surface {
		    type	plane;
		    basePoint	(0.002109375 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.002578125
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.002578125;
	    surface {
		    type	plane;
		    basePoint	(0.002578125 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.003046875
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.003046875;
	    surface {
		    type	plane;
		    basePoint	(0.003046875 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.003515625
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.003515625;
	    surface {
		    type	plane;
		    basePoint	(0.003515625 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.003984375
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.003984375;
	    surface {
		    type	plane;
		    basePoint	(0.003984375 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.004453125
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.004453125;
	    surface {
		    type	plane;
		    basePoint	(0.004453125 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.004921875
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.004921875;
	    surface {
		    type	plane;
		    basePoint	(0.004921875 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.005390625
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.005390625;
	    surface {
		    type	plane;
		    basePoint	(0.005390625 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.005859375
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.005859375;
	    surface {
		    type	plane;
		    basePoint	(0.005859375 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.006328125
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.006328125;
	    surface {
		    type	plane;
		    basePoint	(0.006328125 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.006796875
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.006796875;
	    surface {
		    type	plane;
		    basePoint	(0.006796875 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.007265625
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.007265625;
	    surface {
		    type	plane;
		    basePoint	(0.007265625 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.007734375
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.007734375;
	    surface {
		    type	plane;
		    basePoint	(0.007734375 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.008203125
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.008203125;
	    surface {
		    type	plane;
		    basePoint	(0.008203125 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.008671875
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.008671875;
	    surface {
		    type	plane;
		    basePoint	(0.008671875 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.009140625
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.009140625;
	    surface {
		    type	plane;
		    basePoint	(0.009140625 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.009609375
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.009609375;
	    surface {
		    type	plane;
		    basePoint	(0.009609375 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.010078125
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.010078125;
	    surface {
		    type	plane;
		    basePoint	(0.010078125 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.010546875
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.010546875;
	    surface {
		    type	plane;
		    basePoint	(0.010546875 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.011015625
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.011015625;
	    surface {
		    type	plane;
		    basePoint	(0.011015625 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.011484375
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.011484375;
	    surface {
		    type	plane;
		    basePoint	(0.011484375 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.011953125
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.011953125;
	    surface {
		    type	plane;
		    basePoint	(0.011953125 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.012421875
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.012421875;
	    surface {
		    type	plane;
		    basePoint	(0.012421875 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.012890625
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.012890625;
	    surface {
		    type	plane;
		    basePoint	(0.012890625 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.013359375
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.013359375;
	    surface {
		    type	plane;
		    basePoint	(0.013359375 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.013828125
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.013828125;
	    surface {
		    type	plane;
		    basePoint	(0.013828125 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.014296875
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.014296875;
	    surface {
		    type	plane;
		    basePoint	(0.014296875 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.014765625
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.014765625;
	    surface {
		    type	plane;
		    basePoint	(0.014765625 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.015234375
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.015234375;
	    surface {
		    type	plane;
		    basePoint	(0.015234375 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.015703125
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.015703125;
	    surface {
		    type	plane;
		    basePoint	(0.015703125 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.016171875
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.016171875;
	    surface {
		    type	plane;
		    basePoint	(0.016171875 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.016640625
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.016640625;
	    surface {
		    type	plane;
		    basePoint	(0.016640625 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.017109375
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.017109375;
	    surface {
		    type	plane;
		    basePoint	(0.017109375 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.017578125
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.017578125;
	    surface {
		    type	plane;
		    basePoint	(0.017578125 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.018046875
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.018046875;
	    surface {
		    type	plane;
		    basePoint	(0.018046875 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.018515625
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.018515625;
	    surface {
		    type	plane;
		    basePoint	(0.018515625 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.018984375
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.018984375;
	    surface {
		    type	plane;
		    basePoint	(0.018984375 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.019453125
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.019453125;
	    surface {
		    type	plane;
		    basePoint	(0.019453125 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.019921875
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.019921875;
	    surface {
		    type	plane;
		    basePoint	(0.019921875 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.020390625
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.020390625;
	    surface {
		    type	plane;
		    basePoint	(0.020390625 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.020859375
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.020859375;
	    surface {
		    type	plane;
		    basePoint	(0.020859375 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.021328125
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.021328125;
	    surface {
		    type	plane;
		    basePoint	(0.021328125 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.021796875
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.021796875;
	    surface {
		    type	plane;
		    basePoint	(0.021796875 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.022265625
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.022265625;
	    surface {
		    type	plane;
		    basePoint	(0.022265625 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.022734375
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.022734375;
	    surface {
		    type	plane;
		    basePoint	(0.022734375 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.023203125
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.023203125;
	    surface {
		    type	plane;
		    basePoint	(0.023203125 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.023671875
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.023671875;
	    surface {
		    type	plane;
		    basePoint	(0.023671875 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.024140625
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.024140625;
	    surface {
		    type	plane;
		    basePoint	(0.024140625 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.024609375
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.024609375;
	    surface {
		    type	plane;
		    basePoint	(0.024609375 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.025078125
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.025078125;
	    surface {
		    type	plane;
		    basePoint	(0.025078125 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.025546875
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.025546875;
	    surface {
		    type	plane;
		    basePoint	(0.025546875 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.026015625
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.026015625;
	    surface {
		    type	plane;
		    basePoint	(0.026015625 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.026484375
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.026484375;
	    surface {
		    type	plane;
		    basePoint	(0.026484375 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.026953125
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.026953125;
	    surface {
		    type	plane;
		    basePoint	(0.026953125 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.027421875
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.027421875;
	    surface {
		    type	plane;
		    basePoint	(0.027421875 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.027890625
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.027890625;
	    surface {
		    type	plane;
		    basePoint	(0.027890625 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.028359375
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.028359375;
	    surface {
		    type	plane;
		    basePoint	(0.028359375 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.028828125
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.028828125;
	    surface {
		    type	plane;
		    basePoint	(0.028828125 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.029296875
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.029296875;
	    surface {
		    type	plane;
		    basePoint	(0.029296875 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    enth0.029765625
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.029765625;
	    surface {
		    type	plane;
		    basePoint	(0.029765625 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*he*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.000234375
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.000234375;
	    surface {
		    type	plane;
		    basePoint	(0.000234375 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.000703125
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.000703125;
	    surface {
		    type	plane;
		    basePoint	(0.000703125 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.001171875
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.001171875;
	    surface {
		    type	plane;
		    basePoint	(0.001171875 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.001640625
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.001640625;
	    surface {
		    type	plane;
		    basePoint	(0.001640625 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.002109375
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.002109375;
	    surface {
		    type	plane;
		    basePoint	(0.002109375 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.002578125
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.002578125;
	    surface {
		    type	plane;
		    basePoint	(0.002578125 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.003046875
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.003046875;
	    surface {
		    type	plane;
		    basePoint	(0.003046875 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.003515625
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.003515625;
	    surface {
		    type	plane;
		    basePoint	(0.003515625 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.003984375
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.003984375;
	    surface {
		    type	plane;
		    basePoint	(0.003984375 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.004453125
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.004453125;
	    surface {
		    type	plane;
		    basePoint	(0.004453125 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.004921875
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.004921875;
	    surface {
		    type	plane;
		    basePoint	(0.004921875 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.005390625
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.005390625;
	    surface {
		    type	plane;
		    basePoint	(0.005390625 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.005859375
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.005859375;
	    surface {
		    type	plane;
		    basePoint	(0.005859375 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.006328125
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.006328125;
	    surface {
		    type	plane;
		    basePoint	(0.006328125 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.006796875
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.006796875;
	    surface {
		    type	plane;
		    basePoint	(0.006796875 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.007265625
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.007265625;
	    surface {
		    type	plane;
		    basePoint	(0.007265625 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.007734375
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.007734375;
	    surface {
		    type	plane;
		    basePoint	(0.007734375 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.008203125
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.008203125;
	    surface {
		    type	plane;
		    basePoint	(0.008203125 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.008671875
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.008671875;
	    surface {
		    type	plane;
		    basePoint	(0.008671875 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.009140625
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.009140625;
	    surface {
		    type	plane;
		    basePoint	(0.009140625 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.009609375
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.009609375;
	    surface {
		    type	plane;
		    basePoint	(0.009609375 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.010078125
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.010078125;
	    surface {
		    type	plane;
		    basePoint	(0.010078125 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.010546875
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.010546875;
	    surface {
		    type	plane;
		    basePoint	(0.010546875 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.011015625
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.011015625;
	    surface {
		    type	plane;
		    basePoint	(0.011015625 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.011484375
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.011484375;
	    surface {
		    type	plane;
		    basePoint	(0.011484375 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.011953125
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.011953125;
	    surface {
		    type	plane;
		    basePoint	(0.011953125 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.012421875
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.012421875;
	    surface {
		    type	plane;
		    basePoint	(0.012421875 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.012890625
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.012890625;
	    surface {
		    type	plane;
		    basePoint	(0.012890625 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.013359375
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.013359375;
	    surface {
		    type	plane;
		    basePoint	(0.013359375 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.013828125
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.013828125;
	    surface {
		    type	plane;
		    basePoint	(0.013828125 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.014296875
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.014296875;
	    surface {
		    type	plane;
		    basePoint	(0.014296875 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.014765625
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.014765625;
	    surface {
		    type	plane;
		    basePoint	(0.014765625 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.015234375
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.015234375;
	    surface {
		    type	plane;
		    basePoint	(0.015234375 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.015703125
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.015703125;
	    surface {
		    type	plane;
		    basePoint	(0.015703125 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.016171875
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.016171875;
	    surface {
		    type	plane;
		    basePoint	(0.016171875 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.016640625
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.016640625;
	    surface {
		    type	plane;
		    basePoint	(0.016640625 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.017109375
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.017109375;
	    surface {
		    type	plane;
		    basePoint	(0.017109375 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.017578125
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.017578125;
	    surface {
		    type	plane;
		    basePoint	(0.017578125 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.018046875
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.018046875;
	    surface {
		    type	plane;
		    basePoint	(0.018046875 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.018515625
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.018515625;
	    surface {
		    type	plane;
		    basePoint	(0.018515625 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.018984375
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.018984375;
	    surface {
		    type	plane;
		    basePoint	(0.018984375 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.019453125
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.019453125;
	    surface {
		    type	plane;
		    basePoint	(0.019453125 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.019921875
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.019921875;
	    surface {
		    type	plane;
		    basePoint	(0.019921875 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.020390625
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.020390625;
	    surface {
		    type	plane;
		    basePoint	(0.020390625 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.020859375
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.020859375;
	    surface {
		    type	plane;
		    basePoint	(0.020859375 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.021328125
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.021328125;
	    surface {
		    type	plane;
		    basePoint	(0.021328125 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.021796875
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.021796875;
	    surface {
		    type	plane;
		    basePoint	(0.021796875 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.022265625
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.022265625;
	    surface {
		    type	plane;
		    basePoint	(0.022265625 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.022734375
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.022734375;
	    surface {
		    type	plane;
		    basePoint	(0.022734375 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.023203125
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.023203125;
	    surface {
		    type	plane;
		    basePoint	(0.023203125 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.023671875
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.023671875;
	    surface {
		    type	plane;
		    basePoint	(0.023671875 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.024140625
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.024140625;
	    surface {
		    type	plane;
		    basePoint	(0.024140625 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.024609375
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.024609375;
	    surface {
		    type	plane;
		    basePoint	(0.024609375 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.025078125
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.025078125;
	    surface {
		    type	plane;
		    basePoint	(0.025078125 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.025546875
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.025546875;
	    surface {
		    type	plane;
		    basePoint	(0.025546875 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.026015625
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.026015625;
	    surface {
		    type	plane;
		    basePoint	(0.026015625 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.026484375
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.026484375;
	    surface {
		    type	plane;
		    basePoint	(0.026484375 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.026953125
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.026953125;
	    surface {
		    type	plane;
		    basePoint	(0.026953125 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.027421875
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.027421875;
	    surface {
		    type	plane;
		    basePoint	(0.027421875 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.027890625
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.027890625;
	    surface {
		    type	plane;
		    basePoint	(0.027890625 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.028359375
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.028359375;
	    surface {
		    type	plane;
		    basePoint	(0.028359375 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.028828125
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.028828125;
	    surface {
		    type	plane;
		    basePoint	(0.028828125 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.029296875
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.029296875;
	    surface {
		    type	plane;
		    basePoint	(0.029296875 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
    temp0.029765625
    {
	    type	swakExpression;
	    outputControl	timeStep;
	    valueType	surface;
	    surfaceName	cutPlane0.029765625;
	    surface {
		    type	plane;
		    basePoint	(0.029765625 0 0);
		    normalVector	(1 0 0);
		    interpolate	false;
	    }
	    verbose	true;
	    expression	"sum(rho*U.x*T*area())/sum(rho*U.x*area())";
	    accumulations (
		    average
	    );
    }
        heatFlux0.000234375
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.000234375;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.0 && pos().x < 0.00046921875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.000703125
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.000703125;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.00046828125 && pos().x < 0.00093796875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.001171875
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.001171875;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.0009365625 && pos().x < 0.00140671875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.001640625
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.001640625;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.00140484375 && pos().x < 0.00187546875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.002109375
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.002109375;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.001873125 && pos().x < 0.00234421875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.002578125
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.002578125;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.00234140625 && pos().x < 0.00281296875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.003046875
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.003046875;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.0028096875 && pos().x < 0.00328171875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.003515625
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.003515625;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.00327796875 && pos().x < 0.00375046875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.003984375
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.003984375;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.00374625 && pos().x < 0.00421921875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.004453125
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.004453125;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.00421453125 && pos().x < 0.00468796875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.004921875
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.004921875;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.0046828125 && pos().x < 0.00515671875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.005390625
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.005390625;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.00515109375 && pos().x < 0.00562546875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.005859375
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.005859375;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.005619375 && pos().x < 0.00609421875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.006328125
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.006328125;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.00608765625 && pos().x < 0.00656296875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.006796875
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.006796875;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.0065559375 && pos().x < 0.00703171875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.007265625
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.007265625;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.00702421875 && pos().x < 0.00750046875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.007734375
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.007734375;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.0074925 && pos().x < 0.00796921875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.008203125
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.008203125;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.00796078125 && pos().x < 0.00843796875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.008671875
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.008671875;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.0084290625 && pos().x < 0.00890671875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.009140625
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.009140625;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.00889734375 && pos().x < 0.00937546875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.009609375
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.009609375;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.009365625 && pos().x < 0.00984421875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.010078125
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.010078125;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.00983390625 && pos().x < 0.01031296875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.010546875
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.010546875;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.0103021875 && pos().x < 0.01078171875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.011015625
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.011015625;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.01077046875 && pos().x < 0.01125046875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.011484375
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.011484375;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.01123875 && pos().x < 0.01171921875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.011953125
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.011953125;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.01170703125 && pos().x < 0.01218796875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.012421875
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.012421875;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.0121753125 && pos().x < 0.01265671875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.012890625
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.012890625;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.01264359375 && pos().x < 0.01312546875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.013359375
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.013359375;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.013111875 && pos().x < 0.01359421875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.013828125
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.013828125;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.01358015625 && pos().x < 0.01406296875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.014296875
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.014296875;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.0140484375 && pos().x < 0.01453171875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.014765625
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.014765625;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.01451671875 && pos().x < 0.01500046875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.015234375
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.015234375;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.014985 && pos().x < 0.01546921875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.015703125
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.015703125;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.01545328125 && pos().x < 0.01593796875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.016171875
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.016171875;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.0159215625 && pos().x < 0.01640671875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.016640625
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.016640625;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.01638984375 && pos().x < 0.01687546875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.017109375
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.017109375;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.016858125 && pos().x < 0.01734421875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.017578125
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.017578125;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.01732640625 && pos().x < 0.01781296875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.018046875
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.018046875;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.0177946875 && pos().x < 0.01828171875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.018515625
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.018515625;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.01826296875 && pos().x < 0.01875046875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.018984375
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.018984375;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.01873125 && pos().x < 0.01921921875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.019453125
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.019453125;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.01919953125 && pos().x < 0.01968796875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.019921875
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.019921875;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.0196678125 && pos().x < 0.02015671875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.020390625
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.020390625;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.02013609375 && pos().x < 0.02062546875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.020859375
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.020859375;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.020604375 && pos().x < 0.02109421875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.021328125
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.021328125;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.02107265625 && pos().x < 0.02156296875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.021796875
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.021796875;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.0215409375 && pos().x < 0.02203171875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.022265625
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.022265625;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.02200921875 && pos().x < 0.02250046875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.022734375
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.022734375;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.0224775 && pos().x < 0.02296921875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.023203125
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.023203125;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.02294578125 && pos().x < 0.02343796875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.023671875
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.023671875;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.0234140625 && pos().x < 0.02390671875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.024140625
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.024140625;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.02388234375 && pos().x < 0.02437546875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.024609375
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.024609375;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.024350625 && pos().x < 0.02484421875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.025078125
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.025078125;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.02481890625 && pos().x < 0.02531296875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.025546875
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.025546875;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.0252871875 && pos().x < 0.02578171875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.026015625
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.026015625;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.02575546875 && pos().x < 0.02625046875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.026484375
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.026484375;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.02622375 && pos().x < 0.02671921875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.026953125
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.026953125;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.02669203125 && pos().x < 0.02718796875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.027421875
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.027421875;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.0271603125 && pos().x < 0.02765671875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.027890625
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.027890625;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.02762859375 && pos().x < 0.02812546875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.028359375
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.028359375;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.028096875 && pos().x < 0.02859421875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.028828125
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.028828125;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.02856515625 && pos().x < 0.02906296875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.029296875
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.029296875;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.0290334375 && pos().x < 0.02953171875) ? flux : 0";
     	accumulations ( sum ); 
    }
    heatFlux0.029765625
    {
	    type	patchExpression;
	    enabled	true;
	    patches (
		    hot 
		    sideWall 
	    );
	    variables ( 
		    "position=0.029765625;"
		    "flux=myWallHeatFlux*area();"
	    );
	    expression "( pos().x >0.02950171875 && pos().x < 0.03000046875) ? flux : 0";
     	accumulations ( sum ); 
    }
    outletTemperature
    {
        type swakExpression;
        valueType patch;
	outputControlMode deltaT;
	outputDeltaT	1;
    	patchName outlet;
        verbose true;
        expression "sum(rho*U.x*T*area())/sum(rho*U.x*area())";
        accumulations (
            average
        );
    }
};

